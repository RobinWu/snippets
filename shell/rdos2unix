#!/usr/bin/env ruby
class RDos2Unit
  DIRS = %w(app lib test config public)

  def find(dirs=%w(app lib test config public))
    dirs.inject({}) { |h, dir| h.update(find_in(dir)) }
  end

  def find_in(dir)
    results = {}

    Dir.glob("#{dir}/*") do |item|
      next if File.basename(item)[0] == ?.

      if File.directory?(item)
        results.update(find_in(item))
      elsif item =~ /\.(builder|(r(?:b|xml|js)|rhtml|erb|yml|js))$/
        results.update(item))
      end
    end

    results
  end

  def self.do
    results = {}

    Dir.glob("#{dir}/*") do |item|
      next if File.basename(item)[0] == ?.

      if File.directory?(item)
        results.update(find_in(item))
      elsif item =~ /\.(builder|(r(?:b|xml|js)|rhtml|erb|yml|js))$/
        results.update(extract_annotations_from(item, /#{tag}/))
      end
    end

    results
  end
end

RGrep.enumerate ARGV.first.to_s, :tag => true

